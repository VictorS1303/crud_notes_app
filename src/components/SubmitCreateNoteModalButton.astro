---
const {buttonText} = Astro.props
---
<button class="submit-create-note-modal-button" id="submit_create_note_modal_button">
    {buttonText}
</button>

<style>
    .submit-create-note-modal-button
    {
        font-family: inherit;
        display: inline-block;
        position: absolute;
        bottom: 7.5%;
        left: 50%;
        transform: translateX(-50%);
        width: 85%;
        padding: 10px 15px;
        text-transform: uppercase;
        background-color: #fff;
        color: #191972;
        border-radius: inherit;
        box-shadow: var(--box-shadow);
        font-size: 15px;
        font-weight: 700;
        letter-spacing: 3px;
        cursor: pointer;
    }

    .submit-create-note-modal-button:active
    {
        left: 7.5%;
        transform: scale(.98);
        box-shadow: none;
    }

    
</style>

<script>
    const submitCreateNoteModalButton = document.querySelector('#submit_create_note_modal_button')
    const modalTitleInput = document.querySelector<HTMLInputElement>('#modal_title_input')
    const modalBodyText  = document.querySelector<HTMLTextAreaElement>('#modal_body_input')
    const createNoteModal = document.querySelector('#create_note_modal')
    const notesContainer = document.querySelector<HTMLDivElement>('#notes_container')
    const notesInnerContainer = document.querySelector<HTMLDivElement>('#notes_inner_container')
    const noteWrapper = document.querySelector<HTMLDivElement>('#note_wrapper')
    const addNoteButton = document.querySelector<HTMLButtonElement>('#add_note_btn')

    // EVENT LISTENERS //
    window.addEventListener('keypress', (e) => submitCreateNoteModal(e))
    submitCreateNoteModalButton.addEventListener('click', validateInput)

    function submitCreateNoteModal(e) {
        if(e.keyCode === 13) {
            validateInput()
        }
    }

    function validateInput() {
        if(modalTitleInput.value.trim() !== '' && modalBodyText.value.trim() !== '') {
            setTimeout(() => {
                addNote()
                clearInputs()
            }, 600)
            createNoteModal.classList.remove('active')
            // disableCreateNoteModalButton()
        } else {
            alert('Please fill out both fields')
        }
    }

    // Clear Inputs
    function clearInputs() {
        modalTitleInput.value = ''
        modalBodyText.value = ''
    }

    // Add Note
    function addNote() {
        const newNote = generateNote()

        // Note Title
        const noteTitle = createNoteTitle('title note-title')

        // Note Body
        const noteBody = createNoteBody('body note-body')

        // Delete Single Note Button
        const deleteNoteButton = createDeleteSingleNoteButton('fas fa-trash-can')    
        deleteNoteButton.addEventListener('click', (e) => removeNote(e))
        
        // Appending Note
        newNote.append(noteTitle, noteBody, deleteNoteButton)
        notesInnerContainer.appendChild(newNote)
    }

    // Generate Note
    function generateNote()
    {
        const newNote = document.createElement('div')
        newNote.classList.add('note', `${generateRandomNoteStyle()}`)

        return newNote
    }

    function generateRandomNoteStyle()
    {
        const noteStyles = ['one', 'two', 'three', 'four']
        const randomNoteStyle = noteStyles[Math.floor(Math.random() * noteStyles.length)]
        return randomNoteStyle
    }

    // Create Note Title
    function createNoteTitle(noteTitleClasses)
    {
        const noteTitle = document.createElement('h3')
        noteTitle.textContent = modalTitleInput.value
        noteTitle.setAttribute('id', 'note_title')
        noteTitle.className = noteTitleClasses
        return noteTitle
    }

    // Create Note Body
    function createNoteBody(noteBodyClasses)
    {
        const noteBody = document.createElement('h4')
        noteBody.textContent = modalBodyText.value
        noteBody.className = noteBodyClasses
        noteBody.setAttribute('id', 'note_body')
        return noteBody
    }

    // Delete Single Note Button
    function createDeleteSingleNoteButton(deleteSingleNoteButtonClasses)
    {
        const deleteSingleNoteButton = document.createElement('i')
        deleteSingleNoteButton.className = deleteSingleNoteButtonClasses
        deleteSingleNoteButton.setAttribute('id', 'delete_single_note_button')

        deleteSingleNoteButton.style.position = 'absolute'
        deleteSingleNoteButton.style.bottom = '20px'
        deleteSingleNoteButton.style.right = '20px'
        deleteSingleNoteButton.style.cursor = 'pointer'


        return deleteSingleNoteButton
    }



    function removeNote(e)
    {
        if(e.target.classList.contains('fa-trash-can'))
        {
            e.target.closest('.note').remove()
        }
    }
</script>

